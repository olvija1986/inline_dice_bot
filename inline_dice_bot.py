import os
import random
import uuid
import asyncio
import threading
import requests
import time
from fastapi import FastAPI
from telegram import InlineQueryResultArticle, InputTextMessageContent, Update
from telegram.ext import ApplicationBuilder, InlineQueryHandler, ContextTypes

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = os.environ.get("TOKEN")

# === FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
app = FastAPI()
bot_app = ApplicationBuilder().token(TOKEN).build()

# === Inline –ª–æ–≥–∏–∫–∞ ===
async def inline_roll(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.inline_query.query.strip()
    if not query:
        return

    try:
        max_num = int(query)
        if max_num < 1:
            return

        result = random.randint(1, max_num)
        text = f"üé≤ –í—ã–ø–∞–ª–æ: {result} –∏–∑ {max_num}"

        await update.inline_query.answer(
            results=[
                InlineQueryResultArticle(
                    id=str(uuid.uuid4()),
                    title="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ",
                    description="–ù–∞–∂–º–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á–∏—Å–ª–æ",
                    input_message_content=InputTextMessageContent(text),
                    thumb_url="https://cdn-icons-png.flaticon.com/512/4100/4100836.png"
                )
            ],
            cache_time=0
        )
    except ValueError:
        await update.inline_query.answer(
            results=[],
            switch_pm_text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100",
            switch_pm_parameter="start"
        )

bot_app.add_handler(InlineQueryHandler(inline_roll))

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
def run_bot():
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(bot_app.run_polling())

# === Lifespan (–Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± —Å—Ç–∞—Ä—Ç–∞) ===
@app.on_event("startup")
async def start_bot():
    thread = threading.Thread(target=run_bot, daemon=True)
    thread.start()
    print("‚úÖ Telegram Bot –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ")

# === Keep-alive –ø–∏–Ω–≥–µ—Ä, —á—Ç–æ–±—ã Render –Ω–µ –∑–∞—Å—ã–ø–∞–ª ===
def keep_alive():
    url = "https://inline-dice-bot-7xye.onrender.com"  # üîπ –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Render URL
    while True:
        try:
            requests.get(url)
            print("üîÑ Ping sent to Render")
        except Exception as e:
            print(f"‚ö†Ô∏è Ping failed: {e}")
        time.sleep(600)  # –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

threading.Thread(target=keep_alive, daemon=True).start()

@app.get("/")
def home():
    return {"status": "Bot is running ‚úÖ"}
