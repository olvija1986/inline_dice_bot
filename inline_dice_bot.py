import os
import random
import uuid
import asyncio
from fastapi import FastAPI
from telegram import InlineQueryResultArticle, InputTextMessageContent, Update
from telegram.ext import ApplicationBuilder, InlineQueryHandler, ContextTypes

# ===== –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è =====
TOKEN = os.environ.get("TOKEN")
PORT = int(os.environ.get("PORT", 10000))  # Render –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø–æ—Ä—Ç –≤ $PORT

# ===== FastAPI –¥–ª—è Render =====
fastapi_app = FastAPI()

@fastapi_app.get("/")
async def root():
    return {"status": "ok"}  # –ø—Ä–æ—Å—Ç–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞

# ===== Telegram –±–æ—Ç =====
async def inline_roll(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.inline_query.query.strip()
    if not query:
        return

    try:
        max_num = int(query)
        if max_num < 1:
            return

        result = random.randint(1, max_num)
        text = f"üé≤ –í—ã–ø–∞–ª–æ: {result} –∏–∑ {max_num}"

        await update.inline_query.answer(
            results=[
                InlineQueryResultArticle(
                    id=str(uuid.uuid4()),
                    title="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ",
                    description="–ù–∞–∂–º–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á–∏—Å–ª–æ",
                    input_message_content=InputTextMessageContent(text),
                    thumb_url="https://cdn-icons-png.flaticon.com/512/4100/4100836.png"
                )
            ],
            cache_time=0
        )

    except ValueError:
        await update.inline_query.answer(
            results=[],
            switch_pm_text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100",
            switch_pm_parameter="start"
        )

# ===== –°–æ–∑–¥–∞—ë–º Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ =====
tg_app = ApplicationBuilder().token(TOKEN).build()
tg_app.add_handler(InlineQueryHandler(inline_roll))

# ===== –ó–∞–ø—É—Å–∫ Telegram polling –≤ —Ñ–æ–Ω–µ =====
@fastapi_app.on_event("startup")
async def startup_event():
    asyncio.create_task(tg_app.run_polling())

# ===== –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ uvicorn (–¥–ª—è Render) =====
# render –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑–æ–≤–µ—Ç `uvicorn bot:fastapi_app --host 0.0.0.0 --port $PORT`
